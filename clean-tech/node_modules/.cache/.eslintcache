[{"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\index.js":"1","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\reportWebVitals.js":"2","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\App.js":"3","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Navigation.js":"4","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Home.js":"5","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Profile.js":"6","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Logout.js":"7","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Login.js":"8","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\ManageTeachers.js":"9","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\TeacherPanel.js":"10","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Register.js":"11","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\ManageRegistrations.js":"12"},{"size":524,"mtime":1670770396237,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1670770396238,"results":"15","hashOfConfig":"14"},{"size":1426,"mtime":1670770396228,"results":"16","hashOfConfig":"14"},{"size":2537,"mtime":1670770396232,"results":"17","hashOfConfig":"14"},{"size":11664,"mtime":1670770396229,"results":"18","hashOfConfig":"14"},{"size":10180,"mtime":1670770396235,"results":"19","hashOfConfig":"14"},{"size":1608,"mtime":1670770396231,"results":"20","hashOfConfig":"14"},{"size":9821,"mtime":1670770396230,"results":"21","hashOfConfig":"14"},{"size":4932,"mtime":1670770396231,"results":"22","hashOfConfig":"14"},{"size":2383,"mtime":1670770396236,"results":"23","hashOfConfig":"14"},{"size":9451,"mtime":1670770396236,"results":"24","hashOfConfig":"14"},{"size":5259,"mtime":1670770396231,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gmyzm3",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\index.js",[],"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\reportWebVitals.js",[],"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\App.js",[],"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Navigation.js",["58","59"],"import { Navbar , Nav , Container} from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport './Navigation.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n\r\n  const [role,setRole] = useState(\" \")\r\n  \r\n\r\n   useEffect( async () =>{\r\n\r\n    \r\n      try {\r\n          await axios.get(\"https://localhost:44323/api/GetRole\")\r\n          .then((responce) => {\r\n          if (responce.data === \"admin\"){\r\n            setRole(\"admin\");\r\n          }\r\n          else if (responce.data === \"teacher\"){\r\n            setRole(\"teacher\");\r\n          }\r\n      })\r\n      } \r\n      catch (error) {\r\n          console.error(error)\r\n      }\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <Navbar className='Navbar'>\r\n    <Container>\r\n    \r\n    <Navbar.Brand href=\"#home\" style={{color:'black',padding:7}}> T A C G F</Navbar.Brand>\r\n    <Nav className=\"justify-content-end\">\r\n      <Link to=\"/Home\" style={{textDecoration:'none',color:'black',padding:8}} > Home </Link>\r\n      <Link to=\"/About\" style={{textDecoration:'none',color:'black',padding:8}} > About </Link>\r\n\r\n\r\n      { role === \" \" &&\r\n        <>\r\n                <Link to=\"/Login\" style={{textDecoration:'none',color:'black',padding:8}} > Login </Link>\r\n                <Link to=\"/Register\" style={{textDecoration:'none',color:'black',padding:8}} > Register </Link>\r\n        </>\r\n      }\r\n\r\n      \r\n      { role === \"admin\" &&\r\n        <>\r\n          <Link to=\"/Profile\" style={{textDecoration:'none',color:'black',padding:8}}> My Profile </Link>\r\n          <NavDropdown title=\"Manage\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item  as={Link} to=\"/ManageRegistrations\">Registrations</NavDropdown.Item>\r\n              <NavDropdown.Item as={Link} to=\"/ManageTeachers\">Teachers</NavDropdown.Item>\r\n            </NavDropdown>\r\n          <Link to=\"/Logout\" style={{textDecoration:'none',color:'black',padding:8}}> Logout </Link>\r\n        </>\r\n      } \r\n\r\n      { role === \"teacher\" &&\r\n        <>\r\n          <Link to=\"/Profile\" style={{textDecoration:'none',color:'black',padding:8}}> My Profile </Link>\r\n          <Link to=\"/TeacherPanel\" style={{textDecoration:'none',color:'black',padding:8}}> Registrations </Link>\r\n          <Link to=\"/Logout\" style={{textDecoration:'none',color:'black',padding:8}}> Logout </Link>\r\n        </>\r\n      } \r\n      \r\n\r\n     \r\n      \r\n      </Nav>\r\n    </Container>\r\n  </Navbar>\r\n  \r\n  );\r\n\r\n}\r\nexport default Navigation;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Home.js",["60","61","62","63","64","65","66","67"],"import { Container } from 'react-bootstrap';\r\nimport {useRef,useEffect} from 'react'\r\nimport './Home.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport jQuery from 'jquery'\r\n\r\n(function ($) {\r\n\t$.fn.countTo = function (options) {\r\n\t\toptions = options || {};\r\n\t\t\r\n\t\treturn $(this).each(function () {\r\n\t\t\t// set options for current element\r\n\t\t\tvar settings = $.extend({}, $.fn.countTo.defaults, {\r\n\t\t\t\tfrom:            $(this).data('from'),\r\n\t\t\t\tto:              $(this).data('to'),\r\n\t\t\t\tspeed:           $(this).data('speed'),\r\n\t\t\t\trefreshInterval: $(this).data('refresh-interval'),\r\n\t\t\t\tdecimals:        $(this).data('decimals')\r\n\t\t\t}, options);\r\n\t\t\t\r\n\t\t\t// how many times to update the value, and how much to increment the value on each update\r\n\t\t\tvar loops = Math.ceil(settings.speed / settings.refreshInterval),\r\n\t\t\t\tincrement = (settings.to - settings.from) / loops;\r\n\t\t\t\r\n\t\t\t// references & variables that will change with each update\r\n\t\t\tvar self = this,\r\n\t\t\t\t$self = $(this),\r\n\t\t\t\tloopCount = 0,\r\n\t\t\t\tvalue = settings.from,\r\n\t\t\t\tdata = $self.data('countTo') || {};\r\n\t\t\t\r\n\t\t\t$self.data('countTo', data);\r\n\t\t\t\r\n\t\t\t// if an existing interval can be found, clear it first\r\n\t\t\tif (data.interval) {\r\n\t\t\t\tclearInterval(data.interval);\r\n\t\t\t}\r\n\t\t\tdata.interval = setInterval(updateTimer, settings.refreshInterval);\r\n\t\t\t\r\n\t\t\t// initialize the element with the starting value\r\n\t\t\trender(value);\r\n\t\t\t\r\n\t\t\tfunction updateTimer() {\r\n\t\t\t\tvalue += increment;\r\n\t\t\t\tloopCount++;\r\n\t\t\t\t\r\n\t\t\t\trender(value);\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(settings.onUpdate) == 'function') {\r\n\t\t\t\t\tsettings.onUpdate.call(self, value);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (loopCount >= loops) {\r\n\t\t\t\t\t// remove the interval\r\n\t\t\t\t\t$self.removeData('countTo');\r\n\t\t\t\t\tclearInterval(data.interval);\r\n\t\t\t\t\tvalue = settings.to;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (typeof(settings.onComplete) == 'function') {\r\n\t\t\t\t\t\tsettings.onComplete.call(self, value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction render(value) {\r\n\t\t\t\tvar formattedValue = settings.formatter.call(self, value, settings);\r\n\t\t\t\t$self.html(formattedValue);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.countTo.defaults = {\r\n\t\tfrom: 0,               // the number the element should start at\r\n\t\tto: 0,                 // the number the element should end at\r\n\t\tspeed: 1000,           // how long it should take to count between the target numbers\r\n\t\trefreshInterval: 100,  // how often the element should be updated\r\n\t\tdecimals: 0,           // the number of decimal places to show\r\n\t\tformatter: formatter,  // handler for formatting the value before rendering\r\n\t\tonUpdate: null,        // callback method for every time the element is updated\r\n\t\tonComplete: null       // callback method for when the element finishes updating\r\n\t};\r\n\t\r\n\tfunction formatter(value, settings) {\r\n\t\treturn value.toFixed(settings.decimals);\r\n\t}\r\n}(jQuery));\r\n\r\njQuery(function ($) {\r\n  // custom formatting example\r\n  $('.count-number').data('countToOptions', {\r\n\tformatter: function (value, options) {\r\n\t  return value.toFixed(options.decimals).replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, ',');\r\n\t}\r\n  });\r\n  \r\n  // start all the timers\r\n  $('.timer').each(count);  \r\n  \r\n  function count(options) {\r\n\tvar $this = $(this);\r\n\toptions = $.extend({}, options || {}, $this.data('countToOptions') || {});\r\n\t$this.countTo(options);\r\n  }\r\n});\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n  const aboutSection = useRef(null)\r\n\r\n\r\n  useEffect( () => {\r\n\r\n    if(props.scroll === \"About\"){\r\n    \r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n    else{\r\n      window.scrollTo({\r\n        top: 0\r\n      });\r\n    }\r\n  })\r\n\r\n\r\n\r\n    return (\r\n<div className='body'>\r\n      <div style={{marginTop: 40,marginBottom:40}}>\r\n          \r\n          {/* <h1 className=\"mx-3 font-weight-bold text-white display-1 mb-5 pb-5\">Welcome To Learning Forum</h1> */}\r\n          <div>\r\n          <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-bs-ride=\"true\">\r\n  <div className=\"carousel-indicators\">\r\n    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\r\n    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\r\n    <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\r\n  </div>\r\n  <div className=\"carousel-inner\">\r\n    <div className=\"carousel-item active\">\r\n      <img src=\"car2.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n    </div>\r\n    <div className=\"carousel-item\">\r\n      <img src=\"huge.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n    </div>\r\n    <div className=\"carousel-item\">\r\n      <img src=\"123.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n    </div>\r\n  </div>\r\n  <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\r\n    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span className=\"visually-hidden\">Previous</span>\r\n  </button>\r\n  <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\r\n    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span className=\"visually-hidden\">Next</span>\r\n  </button>\r\n</div>\r\n    \r\n        \r\n          <div className='scroll1'>\r\n\r\n          <Container fluid style={{textAlign:'center',paddingTop:30}}>\r\n        \r\n          <div className=\"container\">\r\n\t<div className=\"row\">\r\n\t    <br/>\r\n\t   <div className=\"col text-center\">\r\n\t\t</div>\r\n\t\t\r\n             \r\n\t\t\r\n\t</div>\r\n\t\t<div className=\"row\">\r\n\t        <div className=\"col\" style={{paddingBottom:20}}>\r\n\t        <div className=\"counter\">\r\n          <i className=\"fa-solid fa-chalkboard-user\"></i>\r\n    \r\n      <h2 className=\"timer count-title count-number\" data-to=\"200\" data-speed=\"1500\"></h2>\r\n       <h3 style={{fontsize:\"5px\",color:\"#e7aa0f\"}} className='panel1Text' ><b> Active Teachers</b></h3>\r\n    </div>\r\n\t        </div>\r\n              <div className=\"col\">\r\n               <div className=\"counter\">\r\n               <i className=\"fa-solid fa-chalkboard-user\"></i>\r\n      <h2 className=\"timer count-title count-number\" data-to=\"500\" data-speed=\"1500\"></h2>\r\n      <h3 style={{fontsize:\"5px\",color:\"#e7aa0f\"}} className='panel1Text' ><b>Students Enrolled</b></h3>\r\n    </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                  <div className=\"counter\">\r\n                  <i className=\"fa-solid fa-chalkboard-user\"></i>\r\n      <h2 className=\"timer count-title count-number\" data-to=\"15\" data-speed=\"1500\"></h2>\r\n      <h3 style={{fontsize:\"5px\",color:\"#e7aa0f\"}} className='panel1Text' ><b>Courses</b></h3>\r\n    </div></div>\r\n              <div className=\"col\">\r\n              <div className=\"counter\">\r\n              <i className=\"fa-solid fa-chalkboard-user\"></i>\r\n      <h2 className=\"timer count-title count-number\" data-to=\"8\" data-speed=\"1500\"></h2>\r\n      <h3 style={{fontsize:\"5px\",color:\"#e7aa0f\"}} className='panel1Text'><b>Response Time</b> </h3>\r\n    </div>\r\n              </div>\r\n         </div>\r\n</div>\r\n\r\n       \r\n\r\n          </Container>\r\n          <div style={{height:50}}></div>\r\n\r\n          <Container fluid style={{backgroundColor:'#eec617'}}>\r\n                <h1 className=\"text-black\"style={{textAlign: 'center', paddingTop:40}}><b>Bridging the gap between your child and their future.</b></h1>\r\n                <h3 style={{textAlign: 'center', paddingTop:3}}></h3>\r\n\r\n                <div className='homePanel1'>\r\n               \r\n                  <div>\r\n                  <img src=\"bulb.jpeg\" className=\"rounded secondPanelImg\" alt=\"...\"/>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                  <ul className='secondPanelText text-black'>\r\n                  <li>One to one Intereactive sessions.</li>\r\n                  <li>Free Demo Session.</li>\r\n                  <li>Regular Homework and Reinforcement Exercises.</li>\r\n                  <Link to=\"/Register\" className=\"btn btn-dark\">Register Now</Link>\r\n                  </ul>\r\n                  </div>\r\n\r\n                </div>\r\n          </Container>\r\n\r\n          <div style={{backgroundColor:'white', height:50}}></div>\r\n\r\n   \r\n          <Container fluid style={{backgroundColor:'black', alignItems:'center',paddingBottom:45 }}>\r\n                <h1 style={{textAlign: 'center', paddingTop:40}} className=\"text-white\" ><b>Registration Process</b></h1>\r\n                <h2 style={{textAlign: 'center', paddingTop:3}}className=\"text-white\">Find your tutor in 3 simple steps:</h2>\r\n\r\n                <div style={{textAlign: 'center', paddingTop:20, display: 'flex', justifyContent:'center'}}>\r\n\r\n                    <img src=\"123icon.png\" className=\"image1\" style={{ paddingTop:40}}/>\r\n                \r\n                </div>\r\n          </Container>\r\n\r\n          <div style={{backgroundColor:'White', height:50}}></div>\r\n\r\n          <div style={{backgroundColor:'White', height:20}}></div>\r\n          <div data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example2\" data-bs-root-margin=\"0px 0px -40%\" data-bs-smooth-scroll=\"true\" className=\"scrollspy-example text-black p-3\" style={{backgroundColor:'#d1cfca'}}tabIndex=\"0\">\r\n          <h1  className= \"text-center\" id=\"scrollspyHeading1 my-5\">Founders: </h1>\r\n          <p className= \"text-center\">\r\n          \r\n        </p>\r\n      \r\n      \r\n        <div className=\"text-center\" style={{display:'flex'}} ref={aboutSection} id=\"aboutSection\">\r\n      \r\n\r\n        <div className='container'>\r\n        <img src=\"founder1.jpeg\" className=\"rounded-circle w-50 p-3\" />  \r\n        <p className=\"mx-auto mt-auto mb-auto\">Muzammil Arif Zuberi</p>\r\n        <p>Co-Founder TACGF</p>\r\n        </div>\r\n        \r\n        <div className='container'>\r\n        <img src=\"founder2.jpeg\" className=\"rounded-circle w-50 p-3\"/>\r\n        <p className=\"mx-auto mt-auto mb-auto\">Adeel Siddiqui</p>\r\n        <p>Co-Founder TACGF</p>\r\n        </div>\r\n\r\n        </div>\r\n          \r\n        \r\n       \r\n        </div>\r\n        </div> \r\n        </div>    \r\n      </div>\r\n\r\n      \r\n  <footer className=\"footer text-center text-black\">\r\n  \r\n  <div className=\"container p-4 pb-0\">\r\n   \r\n    <section className=\"mb-4\">\r\n    \r\n      <h3 className=\"mx-auto mt-auto mb-auto\">Contact Us:</h3>\r\n      <p className=\"mx-auto mt-auto mb-auto\">Phone: +92 336 4828287</p>\r\n      <p>Email: learningforum@gmail.com</p>\r\n\r\n      <a\r\n        className=\"btn btn-outline-dark btn-floating m-1\"\r\n        style={{backgroundcolor: \"#3b5998\"}}\r\n        href=\"https://www.facebook.com/profile.php?id=100063575691859\"\r\n        role=\"button\"\r\n        ><i className=\"fab fa-facebook-f\"></i  ></a>\r\n\r\n      \r\n      <a\r\n        className=\"btn btn-outline-dark btn-floating m-1\"\r\n        style={{backgroundcolor: \"#dd4b39\"}}\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        ><i className=\"fab fa-google\"></i></a>\r\n\r\n     \r\n      <a\r\n        className=\"btn btn-outline-dark btn-floating m-1\"\r\n        style={{backgroundcolor:  \"#ac2bac\"}}\r\n        href=\"https://www.instagram.com/learning_forum/\"\r\n        role=\"button\"\r\n        ><i className=\"fab fa-instagram\"></i></a>\r\n\r\n\r\n      <a\r\n        className=\"btn btn-outline-dark btn-floating m-1\"\r\n        style={{backgroundcolor:  \"#0082ca\"}}\r\n        href=\"#!\"\r\n        role=\"button\"\r\n        ><i className=\"fab fa-linkedin-in\"></i></a>\r\n\r\n\r\n     \r\n    </section>\r\n   \r\n  </div>\r\n\r\n\r\n\r\n  <div className=\"text-center p-3\" style={{backgroundcolor: \"rgba(0, 0, 0, 0.2)\"}}>\r\n   \r\n   \r\n  </div>\r\n\r\n</footer>\r\n\r\n     \r\n</div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Profile.js",["68","69","70"],"import { useState , useEffect} from 'react';\r\nimport { Modal , Button, Form} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {Container , Row, Col,FloatingLabel,Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport './Profile.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Profile = () => {\r\n\r\nconst [name,setName] = useState(\"Someone\")\r\nconst [role,setRole] = useState(\"actor\")\r\nconst [phone,setPhone] = useState(\"03320365229\")\r\n\r\nconst [submitResponce, setSubmitResponce] = useState('')\r\nconst [submitStatus, setSubmitStatus] = useState('')\r\nconst [show, setShow] = useState(false);\r\n\r\nconst [UpdateFname, setUpdateFname] = useState(\"\")\r\nconst [UpdateLname, setUpdateLname] = useState(\"\")\r\nconst [UpdateNumber, setUpdateNumber] = useState(\"\")\r\n\r\nconst [UpdateEmail, setUpdateEmail] = useState(\"\")\r\nconst [UpdatePassword, setUpdatePassword] = useState(\"\")\r\n\r\nconst [UpdateSubj, setUpdateSubj] = useState(\"Maths\")\r\n\r\nconst courses = ['Maths','Science','History', 'Geography', 'Add Maths', 'Biology','Computer Science']\r\n\r\nuseEffect( async () =>{\r\n\r\n    \r\n    try {\r\n        await axios.get(\"https://localhost:44323/api/GetProfileInfo\")\r\n        .then((responce) => {\r\n        \r\n            setRole(responce.data['role'])\r\n            setName(responce.data['firstName'])\r\n            setPhone(responce.data['phoneNumber'])\r\n    })\r\n    } \r\n    catch (error) {\r\n        console.error(error)\r\n    }\r\n\r\n})\r\n\r\n\r\nconst handleUpdatePersonal = async (e) => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    if (form.checkValidity() !== false){\r\n        e.preventDefault();\r\n        \r\n        var data = {\r\n            firstName : UpdateFname,\r\n            lastName : UpdateLname,\r\n            phoneNumber : UpdateNumber\r\n        }\r\n\r\n        if (role === \"teacher\"){\r\n            data[\"subjects\"] = UpdateSubj;\r\n        }\r\n\r\n        try {\r\n            await axios.post(\"https://localhost:44323/api/UpdatePersonalInfo\",\r\n            data\r\n            )\r\n            .then((responce) => {\r\n            \r\n                if (responce.data === \"Success\"){\r\n\r\n                    setSubmitStatus(\"Success\");\r\n                    setSubmitResponce(\"Data Updated Successfully\");\r\n\r\n                    setUpdateFname(\"\")\r\n                    setUpdateLname(\"\")\r\n                    setUpdateNumber(\"\")\r\n\r\n                    setName(UpdateFname)\r\n                    setPhone(UpdateNumber)\r\n                }\r\n                else{\r\n                    setSubmitStatus(\"Failed\");\r\n                    setSubmitResponce(\"An error occured, try again later\");\r\n                }\r\n        })\r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    \r\n    }\r\n\r\n    setShow(true)\r\n\r\n}\r\n\r\nconst handleUpdateAccount = async (e) => {\r\n\r\n    const form = e.currentTarget;\r\n\r\n    if (form.checkValidity() !== false){\r\n        e.preventDefault();\r\n    \r\n        try {\r\n            await axios.post(\"https://localhost:44323/api/UpdateAccountInfo\",\r\n            {\r\n                email : UpdateEmail,\r\n                password : UpdatePassword\r\n            }\r\n            )\r\n            .then((responce) => {\r\n            \r\n                if (responce.data === \"Success\"){\r\n                    \r\n                    setUpdateEmail(\"\");\r\n                    setUpdatePassword(\"\")\r\n                    setSubmitStatus(\"Success\");\r\n                    setSubmitResponce(\"Data Updated Successfully\");\r\n                }\r\n                else if (responce.data === \"Taken\"){\r\n                    \r\n                    setSubmitStatus(\"Failed\");\r\n                    setSubmitResponce(\"Email is already registered\");\r\n                }\r\n                else{\r\n                    setSubmitStatus(\"Failed\");\r\n                    setSubmitResponce(\"An error occured, try again later\");\r\n                }\r\n        })\r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    \r\n    }\r\n\r\n    setShow(true)\r\n\r\n}\r\n\r\nreturn(\r\n\r\n    <Container style={{backgroundColor:'',marginTop:'6vh'}}>\r\n\r\n        <Row  style={{paddingLeft:'1vw'}}>\r\n            <h1>{name}</h1>\r\n            <h4>{role}</h4>\r\n            <h5>{phone}</h5>\r\n        </Row>\r\n\r\n        <Row style={{paddingTop:'3vw',paddingLeft:'1vw',paddingRight:'1vw'}}>\r\n\r\n                <Col style={{paddingright:'7vw'}}>\r\n                    <Container style={{backgroundColor:'#3d3b35',borderRadius:'20px',paddingBottom:'30px', boxShadow:'rgba(0, 0, 0, 0.56) 0px 22px 70px 4px'}}>\r\n\r\n                            <h4 style={{paddingTop:'20px',textAlign:'center', paddingBottom:'40px', color:'white'}}>\r\n                                Update Personal Details\r\n                            </h4>\r\n\r\n                            <Form style={{paddingLeft:'10px', paddingRight:'10px'}} onSubmit={handleUpdatePersonal}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group  className=\"mb-3\">\r\n                                            <Form.Label  style={{color:'white'}}>First Name</Form.Label>\r\n                                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"John\" pattern=\"[A-Z][a-z]+\" minLength={3} onChange={(e) => {setUpdateFname(e.target.value)}} value={UpdateFname} required/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group  className=\"mb-3\">\r\n                                            <Form.Label  style={{color:'white'}}>Last Name</Form.Label>\r\n                                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Doe\" pattern=\"[A-Z][a-z]+\"  minLength={3} onChange={(e) => {setUpdateLname(e.target.value)}} value={UpdateLname} required/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n\r\n                                <Form.Group className=\"mb-3 pr-5 mt-3\">\r\n                                    <Form.Label style={{color:'white'}}>New Phone Number</Form.Label>\r\n                                    <Form.Control type=\"text\" size=\"sm\" placeholder=\"03xxxxxxxxx\" pattern=\"03[0-9]*.{9,9}\" minLength={11} onChange={(e) => {setUpdateNumber(e.target.value)}} value={UpdateNumber} required/>\r\n                                </Form.Group>\r\n\r\n                                { role === \"teacher\" &&\r\n\r\n                                <Row className=\"mt-4\" >\r\n                                    <Form.Label style={{color:'white'}}>New Subject</Form.Label>\r\n                                    <DropdownButton id=\"dropdown-basic-button\" title={UpdateSubj}>\r\n                                    {courses.map((cour) => (\r\n            \r\n                                        <Dropdown.Item href=\"#/action-1\" key={cour} onClick={() => {setUpdateSubj(cour)}}>{cour}</Dropdown.Item>\r\n\r\n                                    ))\r\n                                    }\r\n                                    </DropdownButton>\r\n                                </Row>\r\n\r\n                                }\r\n                                \r\n\r\n                                <Row md={3} className='justify-content-center'>\r\n\r\n                                    <Button size=\"sm\" variant=\"primary\" type=\"submit\" style={{marginTop:'30px'}}>\r\n                                        Update\r\n                                    </Button>\r\n\r\n                                </Row>\r\n\r\n                            </Form>\r\n                        </Container>\r\n                </Col>\r\n\r\n                <Col style={{paddingLeft:'7vw'}}>\r\n                        \r\n                        <Container style={{backgroundColor:'#3d3b35',borderRadius:'20px',paddingBottom:'30px', boxShadow:'rgba(0, 0, 0, 0.56) 0px 22px 70px 4px'}}>\r\n\r\n                            <h4 style={{paddingTop:'20px',textAlign:'center', paddingBottom:'40px', color:'white'}}>\r\n                            Update Account Details\r\n                            </h4>\r\n\r\n                            <Form style={{paddingLeft:'10px', paddingRight:'10px'}} onSubmit={handleUpdateAccount}>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label style={{color:'white'}}>New Email address</Form.Label>\r\n                                    <Form.Control type=\"email\" size=\"sm\" placeholder=\"Enter email\" onChange={(e) => {setUpdateEmail(e.target.value)}} value={UpdateEmail}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                    <Form.Label style={{color:'white'}}>New Password</Form.Label>\r\n                                    <Form.Control size=\"sm\" type=\"password\" placeholder=\"Password\" minLength={4} onChange={(e) => {setUpdatePassword(e.target.value)}} value={UpdatePassword}/>\r\n                                </Form.Group>\r\n\r\n                                <Row md={3} className='justify-content-center'>\r\n\r\n                                    <Button size=\"sm\" variant=\"primary\" type=\"submit\" style={{marginTop:'30px'}}>\r\n                                        Update\r\n                                    </Button>\r\n\r\n                                </Row>\r\n\r\n                            </Form>\r\n\r\n\r\n                        </Container>\r\n\r\n                </Col>\r\n\r\n        </Row>\r\n        \r\n        <Modal show={show} onHide={() => {setShow(false)}} animation={true} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{submitStatus}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {submitResponce}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => {setShow(false)}}>\r\n                        Okay\r\n                    </Button>\r\n                </Modal.Footer>\r\n        </Modal>\r\n\r\n            \r\n    </Container>\r\n\r\n\r\n\r\n\r\n\r\n);\r\n\r\n\r\n\r\n}\r\n\r\nexport default Profile;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Logout.js",["71","72","73"],"import { useState , useEffect} from 'react';\r\nimport { Modal , Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport './Profile.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst Logout = (props) => {\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [logout, setLogout] = useState(false);\r\n    const nav = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(props){\r\n            setShow(true);\r\n        }\r\n\r\n    })\r\n\r\n    const handleLogout = async () => {\r\n\r\n        try {\r\n            await axios.post(\"https://localhost:44323/api/Logout\", \r\n                {\r\n                    task : \"logout\"\r\n                }\r\n            )\r\n            .then((responce) => {\r\n            if (responce.data === \"Success\"){\r\n                setShow(false);\r\n                nav(\"/Home\")\r\n                window.location.reload();\r\n            }\r\n\r\n        })\r\n        } catch (error) {\r\n         \r\n           console.error(error)\r\n    }\r\n\r\n    setShow(false);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        setShow(false);\r\n        nav(-1);\r\n    }\r\n\r\n\r\n    return(\r\n\r\n        <Modal show={show} onHide={handleClose} animation={true} centered>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Logout</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            Are you sure you want to logout?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleLogout}>\r\n                yes\r\n            </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Logout;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Login.js",["74"],"import { useState , useEffect} from 'react';\r\nimport { Modal , Button, Form} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {Container , Row, Col,FloatingLabel,Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport './Login.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [signUp, setSignUp] = useState(false)\r\n    const [submitResponce, setSubmitResponce] = useState('')\r\n    const [submitStatus, setSubmitStatus] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const [loginState, setLoginState] = useState(false);\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [fName, setFName] = useState(\"\")\r\n    const [LName, setLname] = useState(\"\")\r\n    const [phone, setPhoneNumber] = useState(\"\")\r\n    const [course, setCourse] = useState(\"Subject\")\r\n\r\n    const courses = ['Maths','Science','History', 'Geography', 'Add Maths', 'Biology','Computer Science']\r\n    const nav = useNavigate();\r\n\r\n    // useEffect (() => {\r\n    //     azurefunction();\r\n    // },[])\r\n\r\n    // async function azurefunction() {\r\n    //     let response = await fetch(`http://localhost:7071/api/Thankyou?name=%27Merub%27`, {  \r\n    //         method: 'GET', \r\n    //         crossorigin: true,  \r\n    //         mode: 'no-cors',     \r\n    //       }) ;\r\n    //       if (response) {\r\n    //     console.log(response);\r\n    //       }\r\n    //     }\r\n\r\n    const checkLogin = () =>{\r\n\r\n        var i = 0;\r\n        if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)){\r\n            i = 1;\r\n        }\r\n        \r\n        if(password.length < 4){\r\n            i = 1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    const checkSignup = () =>{\r\n\r\n        var i = 0;\r\n        if(checkLogin() === 1){\r\n            i = 1;\r\n        }\r\n        \r\n        if(phone.length !== 11){\r\n            i = 1;\r\n        }\r\n\r\n        if(course === \"Subject\"){\r\n            i = 1;\r\n        }\r\n\r\n        if( !/^[a-zA-Z]+$/.test(fName)){\r\n            i = 1;\r\n            console.log(\"name\")\r\n        }\r\n        if( !/^[a-zA-Z]+$/.test(LName)){\r\n            i = 1;\r\n            console.log(\"name\")\r\n        }\r\n        return i;\r\n    }\r\n\r\n\r\n\r\n    const handleLogin = async () =>{\r\n\r\n        if (checkLogin() === 1){\r\n\r\n            setSubmitStatus(\"Failed!\")\r\n            setSubmitResponce(\"input format does not match\")\r\n            setShow(true)\r\n        }\r\n\r\n        else{\r\n\r\n            const data = {\r\n                email : email,\r\n                password : password\r\n            }\r\n          \r\n            try {\r\n                    await axios.post(\"https://localhost:44323/api/Login\", \r\n                        data\r\n                    )\r\n                    .then((responce) => {\r\n                    if (responce.data === \"Success\"){\r\n                        setSubmitResponce(\"Login Successful\")\r\n                        setSubmitStatus(\"Success\")\r\n                        setSignUp(false);\r\n                        setLoginState(true);\r\n                    }\r\n                    else{\r\n                        setSubmitResponce(\"Invalid email/password, retry\")\r\n                        setSubmitStatus(\"Failed\")\r\n                        setLoginState(false);\r\n                        \r\n                    }\r\n                })\r\n                } catch (error) {\r\n                    console.error(error)\r\n            }\r\n        }\r\n        \r\n    setShow(true);    \r\n    }\r\n\r\n    const handleSignUp = async () =>{\r\n\r\n        if (checkSignup() === 1){\r\n\r\n            setSubmitStatus(\"Failed!\")\r\n            setSubmitResponce(\"input format does not match\")\r\n        }\r\n\r\n        else{\r\n\r\n            const data = {\r\n                firstName : fName,\r\n                lastName : LName,\r\n                phoneNumber : phone,\r\n                email : email,\r\n                password : password,\r\n                subjects : course\r\n            }\r\n          \r\n            try {\r\n                    await axios.post(\"https://localhost:44323/api/SignUp\", \r\n                        data\r\n                    )\r\n                    .then((responce) => {\r\n                    if (responce.data === \"Success\"){\r\n                        console.log(responce.data)\r\n                        setSubmitResponce(\"Wooho! You are Registered!!!\")\r\n                        setSubmitStatus(\"SignUp Successful\")\r\n                        setSignUp(false);\r\n                    }\r\n                    else{\r\n                        console.log(data)\r\n                        console.log(responce.data)\r\n                        setSubmitResponce(\"Email has already been taken\")\r\n                        setSubmitStatus(\"SignUp Failed\")\r\n                    }\r\n                })\r\n                } catch (error) {\r\n                    console.error(error)\r\n            }\r\n        }\r\n        \r\n        setShow(true);\r\n\r\n    }\r\n\r\n\r\n    const handleModal = () => {\r\n\r\n        \r\n        if (loginState){\r\n            nav('/Home');\r\n            window.location.reload();\r\n        }\r\n        setShow(false);\r\n    \r\n}\r\n\r\n    return(\r\n\r\n\r\n        <Container className='signinContainer' style={{margin: '0 auto', marginTop : '10vh',padding:'50px',maxWidth:'600px'}}>\r\n\r\n            <Row style={{display:'inline-flex'}}>\r\n                <Col>\r\n                <Button variant=\"outline-secondary\" onClick={() => {setSignUp(false)}}>Login</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button variant=\"outline-secondary\" onClick={() => {setSignUp(true)}}>Signup</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row style={{paddingTop:'20px', paddingBottom:'20px'}}>\r\n                {signUp ? <h1 style={{textAlign:'center',color:'white'}}>Signup</h1> : <h1 style={{textAlign:'center',color:'white'}}>Login</h1> }\r\n            </Row>\r\n\r\n\r\n            { signUp ? \r\n               \r\n               <Row className=\"mb-5\" style={{ marginLeft:'0'}}>\r\n                        <Row className=\"mb-3\" style={{ padding:'1px'}}>\r\n                            <Col>\r\n                                <FloatingLabel controlId=\"floatingInput\" label=\"First Name\" style={{paddingTop:'10px'}} >\r\n                                    <Form.Control type=\"fname\" onChange={(e) => {setFName(e.target.value)}} placeholder=\"John\" size=\"sm\" style={{height:'40px'}}/>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel controlId=\"floatingInput\" label=\"Last Name\" style={{paddingTop:'10px'}} >\r\n                                    <Form.Control type=\"lname\" onChange={(e) => {setLname(e.target.value)}} placeholder=\"John\" size=\"sm\" style={{height:'40px'}}/>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ padding:'0px'}}>\r\n                            <Col>\r\n                            <FloatingLabel controlId=\"floatingInput\" label=\"Phone Number\" style={{paddingTop:'10px'}} >\r\n                                    <Form.Control type=\"phone\" onChange={(e) => {setPhoneNumber(e.target.value)}} pattern=\"03[0-9]*.{9,9}\" placeholder=\"Phone Number\" maxLength={11} size=\"sm\" style={{height:'40px'}}/>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n\r\n\r\n                            <Col style={{paddingTop: '11px'}} >\r\n\r\n                                <DropdownButton id=\"dropdown-basic-button\" title={course}>\r\n                                {courses.map((cour) => (\r\n        \r\n                                    <Dropdown.Item href=\"#/action-1\" key={cour} onClick={() => {setCourse(cour)}}>{cour}</Dropdown.Item>\r\n\r\n                                ))\r\n                                }\r\n                                </DropdownButton>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n\r\n               </Row>             \r\n            : \r\n                \r\n               <div>\r\n               </div> \r\n                \r\n            }\r\n\r\n\r\n\r\n            <Row style={{ padding:'0px'}}>\r\n\r\n\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"email\" style={{padding:'7px'}} >\r\n                        <Form.Control type=\"email\" onChange={(e) => {setEmail(e.target.value)}} placeholder=\"example@gmail.com\" size=\"sm\" style={{height:'40px'}} required/>\r\n                </FloatingLabel> \r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                 <FloatingLabel controlId=\"floatingInput\" label=\"password\" style={{padding:'7px'}} >\r\n                        <Form.Control type=\"password\" onChange={(e) => {setPassword(e.target.value)}} placeholder=\"example@gmail.com\" size=\"sm\" style={{height:'40px'}} required/>\r\n                </FloatingLabel>\r\n\r\n            </Row>\r\n\r\n            \r\n            <Row className=\"justify-content-md-center pt-3\" md={4}>\r\n\r\n                {signUp ? <Button variant=\"primary\" size=\"md\" onClick={handleSignUp}>Signup</Button> : \r\n                \r\n                <Button variant=\"primary\" size=\"md\" className=\"mt-4\"onClick={handleLogin}>Login</Button> }\r\n\r\n            </Row>\r\n\r\n            <Modal show={show} onHide={handleModal} animation={true} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{submitStatus}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {submitResponce}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleModal}>\r\n                        Okay\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Login;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\ManageTeachers.js",["75","76","77","78","79"],"import { Col , Row , Container,Form, Button, Modal } from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport './Navigation.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst ManageTeachers = () => {\r\n\r\n    const [teachers, setTeachers] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [submitResponce, setSubmitResponce] = useState('')\r\n    const [submitStatus, setSubmitStatus] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const [removed, setRemoved] = useState(false);\r\n\r\n    useEffect( async () =>{\r\n        \r\n        try {\r\n            await axios.get(\"https://localhost:44323/api/GetTeachers\",)\r\n            .then((responce) => {\r\n  \r\n                setTeachers(responce.data)\r\n        })\r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n    const handleCheck = (id) => {\r\n\r\n        let newSubjects = selected\r\n        let ind = newSubjects.indexOf(id)\r\n\r\n        if(ind === -1){\r\n            newSubjects.push(id)\r\n        }\r\n        else{\r\n            newSubjects.splice(ind, 1); \r\n        }\r\n\r\n        setSelected(newSubjects)\r\n    }\r\n\r\n\r\n\r\n    const handleRemove = async() => {\r\n\r\n        if (selected.length == 0){\r\n\r\n            setSubmitStatus(\"Failed\")\r\n            setSubmitResponce(\"Select atleast one teacher to remove.\")\r\n            setRemoved(false)\r\n\r\n        }\r\n        else{\r\n            try {\r\n                await axios.post(\"https://localhost:44323/api/RemoveTeacher\", \r\n                    {\r\n                        ids : selected\r\n                    }\r\n                )\r\n                .then((responce) => {\r\n                if (responce.data === \"Success\"){\r\n\r\n                    setSubmitResponce(\"teacher(s) removed successfully\")\r\n                    setSubmitStatus(\"Success\")\r\n                    setRemoved(true)\r\n\r\n                }\r\n                else{\r\n                    setRemoved(false)\r\n                    setSubmitResponce(\"An error occured\")\r\n                    setSubmitStatus(\"Failed\")\r\n                }\r\n            })\r\n            } \r\n            \r\n            catch (error) {\r\n                console.error(error)\r\n            }\r\n    \r\n\r\n        }\r\n    \r\n        setShow(true)\r\n    }\r\n\r\n\r\n    const handleModal = () => {\r\n\r\n        if (removed){\r\n            window.location.reload()\r\n        }\r\n        setShow(false)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'50px', maxWidth:'1000px',paddingLeft:'3vw',paddingRight:'3vw'}}>\r\n\r\n            <Row>\r\n                <h1>Manage Teachers</h1>\r\n            </Row>\r\n            <Row md={6} style={{justifyContent:'right'}}>\r\n            <Button size='sm' variant=\"danger\" md={2} onClick={handleRemove}>Remove</Button>{' '}\r\n            </Row>\r\n\r\n            <Row style={{paddingTop:'30px'}}>\r\n\r\n            <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>ID</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Subject</th>\r\n                            <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        { teachers.map((teacher) =>(\r\n                             <tr>\r\n                             <td>{teacher[0]}</td>\r\n                             <td>{teacher[1]}</td>\r\n                             <td>{teacher[2]}</td>\r\n                             <td>{teacher[3]}</td>\r\n                             <td>{teacher[4]}</td>\r\n                             <td>\r\n                                <Form.Check type='checkbox' id={'default-checkbox'} key={teacher[0]} style={{backgroundColor:'red',paddingLeft:'40px'}} onChange={() => {handleCheck(teacher[0])}} />\r\n                             </td>\r\n                   \r\n                             </tr>\r\n\r\n                        ))\r\n                        }\r\n                        </tbody>\r\n\r\n                </Table>\r\n\r\n            </Row>\r\n\r\n            <Modal show={show} onHide={handleModal} animation={true} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{submitStatus}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {submitResponce}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleModal}>\r\n                        Okay\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n       \r\n      \r\n      </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ManageTeachers;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\TeacherPanel.js",["80","81","82","83","84","85","86"],"import { Col , Row , Container,Form, Button, Modal } from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport './Navigation.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst TeacherPanel = () => {\r\n\r\n\r\n    const [registrations, setRegis] = useState([]);\r\n \r\n\r\n    useEffect( async () =>{\r\n        \r\n        try {\r\n            await axios.get(\"https://localhost:44323/api/GetRegistrationsTeacher\",)\r\n            .then((responce) => {\r\n  \r\n                setRegis(responce.data)\r\n        })\r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'50px', maxWidth:'1000px',paddingLeft:'3vw',paddingRight:'3vw'}}>\r\n\r\n            <Row>\r\n                <h1>Registrations</h1>\r\n            </Row>\r\n\r\n            <Row style={{paddingTop:'30px'}}>\r\n\r\n            <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Gender</th>\r\n                            <th>Mode</th>\r\n                            <th>Subjects</th>\r\n                            <th>Hours</th>\r\n                            <th>Offering Fees</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        { registrations.map((student) =>(\r\n                             <tr>\r\n                             <td>{student[0]}</td>\r\n                             <td>{student[1]}</td>\r\n                             <td>{student[2]}</td>\r\n                             <td>{student[3]}</td>\r\n                             <td>{student[4]}</td>\r\n                             <td>{student[5]}</td>\r\n                             <td>{student[6]}</td>\r\n                             <td>{student[7]}</td>\r\n                   \r\n                             </tr>\r\n\r\n                        ))\r\n                        }\r\n                        </tbody>\r\n\r\n                </Table>\r\n\r\n            </Row>\r\n    \r\n      </Container>            \r\n);\r\n\r\n\r\n}\r\n\r\nexport default TeacherPanel;","C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\Register.js",[],"C:\\Users\\samma\\OneDrive\\Desktop\\TACGF project\\Website_IPT\\clean-tech\\src\\ManageRegistrations.js",["87","88","89","90","91"],"import { Col , Row , Container,Form, Button, Modal } from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport './Navigation.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst ManageRegistrations = () => {\r\n\r\n    const [registrations, setRegis] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [submitResponce, setSubmitResponce] = useState('')\r\n    const [submitStatus, setSubmitStatus] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const [removed, setRemoved] = useState(false);\r\n\r\n    useEffect( async () =>{\r\n        \r\n        try {\r\n            await axios.get(\"https://localhost:44323/api/GetRegistrations\",)\r\n            .then((responce) => {\r\n  \r\n                setRegis(responce.data)\r\n        })\r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n    const handleCheck = (id) => {\r\n\r\n        let newSubjects = selected\r\n        let ind = newSubjects.indexOf(id)\r\n\r\n        if(ind === -1){\r\n            newSubjects.push(id)\r\n        }\r\n        else{\r\n            newSubjects.splice(ind, 1); \r\n        }\r\n\r\n        setSelected(newSubjects)\r\n    }\r\n\r\n\r\n\r\n    const handleRemove = async() => {\r\n\r\n        if (selected.length == 0){\r\n\r\n            setSubmitStatus(\"Failed\")\r\n            setSubmitResponce(\"Select atleast one registration to remove.\")\r\n            setRemoved(false)\r\n\r\n        }\r\n        else{\r\n            try {\r\n                await axios.post(\"https://localhost:44323/api/RemoveRegistration\", \r\n                    {\r\n                        ids : selected\r\n                    }\r\n                )\r\n                .then((responce) => {\r\n                if (responce.data === \"Success\"){\r\n\r\n                    setSubmitResponce(\"registrations(s) removed successfully\")\r\n                    setSubmitStatus(\"Success\")\r\n                    setRemoved(true)\r\n\r\n                }\r\n                else{\r\n                    setRemoved(false)\r\n                    setSubmitResponce(\"An error occured\")\r\n                    setSubmitStatus(\"Failed\")\r\n                }\r\n            })\r\n            } \r\n            \r\n            catch (error) {\r\n                console.error(error)\r\n            }\r\n    \r\n\r\n        }\r\n    \r\n        setShow(true)\r\n    }\r\n\r\n\r\n    const handleModal = () => {\r\n\r\n        if (removed){\r\n            window.location.reload()\r\n        }\r\n        setShow(false)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'50px', maxWidth:'1000px',paddingLeft:'3vw',paddingRight:'3vw'}}>\r\n\r\n            <Row>\r\n                <h1>Manage Registrations</h1>\r\n            </Row>\r\n            <Row md={6} style={{justifyContent:'right'}}>\r\n            <Button size='sm' variant=\"danger\" md={2} onClick={handleRemove}>Remove</Button>{' '}\r\n            </Row>\r\n\r\n            <Row style={{paddingTop:'30px'}}>\r\n\r\n            <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Gender</th>\r\n                            <th>Mode</th>\r\n                            <th>Subjects</th>\r\n                            <th>Hours</th>\r\n                            <th>Expected Fees</th>\r\n                            <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        { registrations.map((student) =>(\r\n                             <tr>\r\n                             <td>{student[0]}</td>\r\n                             <td>{student[1]}</td>\r\n                             <td>{student[2]}</td>\r\n                             <td>{student[3]}</td>\r\n                             <td>{student[4]}</td>\r\n                             <td>{student[5]}</td>\r\n                             <td>{student[6]}</td>\r\n                             <td>{student[7]}</td>\r\n                             <td>\r\n                                <Form.Check type='checkbox' id={'default-checkbox'} key={student[0]} style={{backgroundColor:'red',paddingLeft:'40px'}} onChange={() => {handleCheck(student[0])}} />\r\n                             </td>\r\n                   \r\n                             </tr>\r\n\r\n                        ))\r\n                        }\r\n                        </tbody>\r\n\r\n                </Table>\r\n\r\n            </Row>\r\n\r\n            <Modal show={show} onHide={handleModal} animation={true} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{submitStatus}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {submitResponce}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleModal}>\r\n                        Okay\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n       \r\n      \r\n      </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ManageRegistrations;",{"ruleId":"92","severity":1,"message":"93","line":3,"column":16,"nodeType":"94","messageId":"95","endLine":3,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":17,"column":15,"nodeType":"98","endLine":34,"endColumn":4},{"ruleId":"99","severity":1,"message":"100","line":182,"column":7,"nodeType":"101","endLine":182,"endColumn":86},{"ruleId":"99","severity":1,"message":"100","line":189,"column":7,"nodeType":"101","endLine":189,"endColumn":86},{"ruleId":"99","severity":1,"message":"100","line":196,"column":7,"nodeType":"101","endLine":196,"endColumn":85},{"ruleId":"99","severity":1,"message":"100","line":202,"column":7,"nodeType":"101","endLine":202,"endColumn":84},{"ruleId":"99","severity":1,"message":"100","line":216,"column":17,"nodeType":"101","endLine":216,"endColumn":65},{"ruleId":"102","severity":1,"message":"103","line":245,"column":21,"nodeType":"101","endLine":245,"endColumn":89},{"ruleId":"102","severity":1,"message":"103","line":264,"column":9,"nodeType":"101","endLine":264,"endColumn":72},{"ruleId":"102","severity":1,"message":"103","line":270,"column":9,"nodeType":"101","endLine":270,"endColumn":71},{"ruleId":"92","severity":1,"message":"104","line":4,"column":30,"nodeType":"94","messageId":"95","endLine":4,"endColumn":43},{"ruleId":"92","severity":1,"message":"105","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":32,"column":12,"nodeType":"98","endLine":48,"endColumn":2},{"ruleId":"92","severity":1,"message":"106","line":15,"column":12,"nodeType":"94","messageId":"95","endLine":15,"endColumn":18},{"ruleId":"92","severity":1,"message":"107","line":15,"column":20,"nodeType":"94","messageId":"95","endLine":15,"endColumn":29},{"ruleId":"96","severity":1,"message":"108","line":19,"column":5,"nodeType":"94","endLine":19,"endColumn":14,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"110","line":1,"column":21,"nodeType":"94","messageId":"95","endLine":1,"endColumn":30},{"ruleId":"92","severity":1,"message":"111","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"112","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"92","severity":1,"message":"113","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":23,"column":16,"nodeType":"98","endLine":35,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":58,"column":29,"nodeType":"116","messageId":"117","endLine":58,"endColumn":31},{"ruleId":"92","severity":1,"message":"111","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"118","line":1,"column":32,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"119","line":1,"column":38,"nodeType":"94","messageId":"95","endLine":1,"endColumn":44},{"ruleId":"92","severity":1,"message":"120","line":1,"column":46,"nodeType":"94","messageId":"95","endLine":1,"endColumn":51},{"ruleId":"92","severity":1,"message":"112","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"92","severity":1,"message":"113","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":19,"column":16,"nodeType":"98","endLine":31,"endColumn":6},{"ruleId":"92","severity":1,"message":"111","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"112","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"92","severity":1,"message":"113","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":23,"column":16,"nodeType":"98","endLine":35,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":58,"column":29,"nodeType":"116","messageId":"117","endLine":58,"endColumn":31},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FloatingLabel' is defined but never used.","'useNavigate' is defined but never used.","'logout' is assigned a value but never used.","'setLogout' is assigned a value but never used.","React Hook useEffect contains a call to 'setShow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props] as a second argument to the useEffect Hook.",["121"],"'useEffect' is defined but never used.","'Col' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.",{"desc":"122","fix":"123"},"Add dependencies array: [props]",{"range":"124","text":"125"},[464,464],", [props]"]